(()=>{"use strict";class t{constructor(){this.options={enableAccuracy:!1,timeout:5e3,maximumAge:0}}getPosition(){return new Promise((t=>{navigator.geolocation?navigator.geolocation.getCurrentPosition((e=>t(this.successHandler(e))),(e=>t(this.errorHandler(e)))):(this.errorDescription={success:!0,title:"Выбранный браузер не поддерживает геолоакацию",message:"Выберите другой браузер или введите данные вручную"},t(this.errorDescription))}))}successHandler(t){this.errorDescription=null;const{latitude:e,longitude:s}=t.coords;return this.coords={success:!0,latitude:+e.toFixed(5),longitude:+s.toFixed(5),date:new Date(t.timestamp).toLocaleString()},this.coords}errorHandler(t){switch(this.coords=null,this.errorDescription={},t.code){case 1:this.errorDescription={success:!1,title:"Нет разразрешения нa использование геолокации",message:"Измените настройки и обновите страницу или введите координаты вручную"};break;case 2:this.errorDescription={success:!1,title:"Техническая ошибка",message:"Измените настройки и обновите страницу или введите координаты вручную"};break;case 3:this.errorDescription={success:!1,title:"Превышено время ожидания",message:"Измените настройки и обновите страницу или введите координаты вручную"};break;default:this.errorDescription={success:!1,title:"Неизвестная ошибка",message:"Упс, что-то пошло не так...Повторите попытку или введите координаты вручную"}}return console.log(this.errorDescription,"descr"),this.errorDescription}}class e{constructor(t){this.parentEl=t}static get markup(){return'\n        <div class="modal modal-active">\n\t\t\t    <div class="modal-content">\n\t\t\t      <h3 class="modal__title"></h3>\n            <span class="modal__message"></span>\n            <div class="input__geo">\n              <input class="input__coords" type="text" placeholder="широта, долгота">\n              <span class="tooltip-active hidden">*Заполните поле\t</span>\n            </div>\n            <div class="button__block modal__button">\n              <button class="modal__add-btn">Добавить</button>\n            </div>\n          </div>\n      </div>\n'}redrawModal(){this.parentEl.insertAdjacentHTML("afterbegin",this.constructor.markup),this.modalWrapperEl.classList.add("modal-active")}showDescription(t,e){document.querySelector(".modal__title").textContent=t,document.querySelector(".modal__message").textContent=e}get modalWrapperEl(){return this.parentEl.querySelector(".modal")}get modalTitle(){return this.parentEl.querySelector(".modal__title")}set modalTitle(t){this.parentEl.querySelector(".modal__title").textContent=t}get modalMessage(){return this.parentEl.querySelector(".modal__message")}set modalMessage(t){this.parentEl.querySelector(".modal__message").textContent=t}get modalButtonEl(){return this.parentEl.querySelector(".modal__add-btn")}closeModalForm(t){""!==document.querySelector(".input__coords").value?(this.modalWrapperEl.classList.remove("modal-active"),this.parentEl.querySelector(".modal").remove()):document.querySelector(".tooltip-active").classList.remove("hidden")}}class s{constructor(t,e){this.content=t,this.coords=e}init(){this.bindToDOM()}static template(t,e,s){return`\n    <div class="article-box">\n      <div class="article__header">${t}</div>\n      <div class="article__content">\n        <span class="article__post">${e}</span>\n      </div>\n      <div class="article__footer">\n        <span class="geo__coords">[${s}]</span>\n        <span class="geo__icon">&#128681</span>\n      </td>\n    </tr>\n`}bindToDOM(){const t=document.querySelector(".board"),e=this.addCard(this.created,this.content,this.coords);t.insertAdjacentHTML("beforeend",e)}addCard(){if(this.created=(new Date).toLocaleString(),this.content=document.querySelector(".text__field").value.trim(),this.content){const t=this.constructor.template(this.created,this.content,this.coords);return document.querySelector(".text__field").value="",t}return!1}}class o{constructor(t){this.inputEl=t,this.result=[]}verify(){const t=this.getValuesArr(),e=this.getAllowableValue(t);return this.result=[],e}getValuesArr(){let t=this.inputEl.value.replace(/\[|\]/g,"");t=t.split(",");return t.map((t=>t.replaceAll(" ","")))}getAllowableValue(t){t.forEach((t=>{const e=/^-?[0-9][0-9,./]+$/.test(t);this.result.push(e)}));if(this.someValues(this.result))return this.showTooltip("Допустимы только числовые параметры"),this.result=[],!1;return this.getOverlapValue(t)?(document.querySelector(".tooltip-active").classList.add("hidden"),t):void 0}getOverlapValue(t){return t.length<=1||t.length>2?(this.showTooltip("Введите второй параметр через запятую"),!1):t[0].replace("-","")>90?(this.showTooltip("Допустимые значения широты от -90 до 90"),!1):t[1].replace("-","")>180?(this.showTooltip("Допустимые значения долготы -180 до 180"),!1):(document.querySelector(".tooltip-active").classList.add("hidden"),t)}showTooltip(t){const e=document.querySelector(".tooltip-active");e.classList.remove("hidden"),e.textContent=t}someValues(t){return!!t.some((t=>!1===t))}}const i=document.querySelector(".container"),r=new class{constructor(t){this.container=t,this.board=null}createBoard(){this.board=document.createElement("div"),this.board.classList.add("board-container"),this.bindToDOM()}static get markup(){return'\n    \n    <div class="board-container">\n      <h3 class="board__title"></h3>\n      <div class="board"></div>\n      <div class="input-wrapper">\n        <input class="text__field" type="text" placeholder="Напишите что-нибудь...">\n        <div class="button__block">\n          <button class="audio__btn">&#9835</button>\n          <button class="video__btn">&#128250</button>\n        </div>\n      </div>\n    </div>\n\t\t'}bindToDOM(){this.container.insertAdjacentHTML("afterbegin",this.constructor.markup)}}(i),n=new class{constructor(e){this.board=e,this.store=[],this.geo=new t}init(){this.container=document.querySelector(".container"),this.board.createBoard();document.querySelector(".input-wrapper");this.addSubscribe(this.container),this.modal=new e(this.container),this.fieldMessage=document.querySelector(".text__field")}addSubscribe(t){t.addEventListener("keyup",this.keyUp.bind(this)),t.addEventListener("click",this.completionField.bind(this)),t.addEventListener("input",this.completionField.bind(this)),t.addEventListener("click",this.getManualCoords.bind(this))}completionField(t){t.target.classList.contains("text__field")&&document.querySelector(".tooltip-active")&&(Array.from(document.querySelectorAll(".tooltip-active")).forEach((t=>t.remove())),document.querySelector(".text__field").style.outline="none")}validityFields(t){const e=document.createElement("span");if(e.classList.add("tooltip-active"),!t.parentElement.lastElementChild.classList.contains("tooltip-active"))return""!==t.value||(this.parentEl.insertAdjacentElement("beforeend",e),e.textContent="*Заполните поле",document.querySelector(".text__field").style.outline="2px solid red",!1)}keyUp(t){if(t.preventDefault(),document.querySelector(".tooltip-active")||"Enter"!==t.code)return;this.parentEl=t.target.parentElement;this.validityFields(document.querySelector(".text__field"))&&this.getAutoCoords()}getAutoCoords(){this.position=this.geo.getPosition(),this.position.then((t=>{t.success?(this.content=this.fieldMessage.value,this.coords=[t.latitude,t.longitude],this.createPost(this.content,this.coords)):(this.modal.redrawModal(),this.modal.showDescription(t.title,t.message))}))}getManualCoords(t){if(!t.target.classList.contains("modal__add-btn"))return;if(""===document.querySelector(".input__coords").value)return void document.querySelector(".tooltip-active").classList.remove("hidden");this.content=this.fieldMessage.value,this.coordsValue=document.querySelector(".input__coords");const e=new o(this.coordsValue);this.coords=e.verify(),this.coords&&(this.createPost(this.content,this.coords),this.modal.closeModalForm())}createPost(t,e){const o=new s(t,e);o.init(),console.log(o,"post")}}(r);n.init()})();